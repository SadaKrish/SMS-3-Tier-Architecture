<!--Author Details-->
@model  SMS.ViewModel.Allocation.AllocationViewModel
@{
    ViewBag.Title = "StudentAllocation";
}
<link href="https://cdn.datatables.net/2.0.7/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
<style>

    .table {
        font-size: 12px;
        text-align: center;
    }

    div .panel-body {
        margin-bottom: 25px;
    }
</style>
<div class="card panel-default">
    <div class="panel-heading">
        <h2 class="card-header">Student Allocation</h2>
    </div>


    <div class="panel-body card-body">

        <a class="btn btn-outline-primary" style="margin: 10px; background-color: #cbf5ee;" onclick="LoadCreatePage()" id="button"> <i class="bi bi-plus"></i>  Add New Allocation</a>

        <div class="table-responsive">
            <table id="studentlist" class="table table-bordered table-striped" style="text-align:center; width: 100%;">
                <thead style="text-align:center;">
                    <tr>
                        <th style="background-color: #cbf5ee; text-align: center;">@Html.DisplayNameFor(model => model.StudentList.First().StudentRegNo)</th>
                        <th style="background-color: #cbf5ee; text-align: center;">@Html.DisplayNameFor(model => model.StudentList.First().DisplayName)</th>
                        <th style="background-color: #cbf5ee; text-align: center;">@Html.DisplayNameFor(model => model.SubjectList.First().SubjectCode)</th>
                        <th style="background-color: #cbf5ee; text-align: center;">@Html.DisplayNameFor(model => model.SubjectList.First().Name)</th>
                        <th style="background-color: #cbf5ee; text-align: center;">@Html.DisplayNameFor(model => model.TeacherList.First().TeacherRegNo)</th>
                        <th style="background-color: #cbf5ee; text-align: center;">@Html.DisplayNameFor(model => model.TeacherList.First().DisplayName)</th>

                        <th style="background-color: #cbf5ee;"></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>
@*<button id="back-to-list" class="btn m-4" onclick="LoadList()" style="display: none;">Back</button>*@
<div class="col-md-4" id="createoredit">
    <!--Partial view-->


</div>



@section scripts{
    <script src="~/Scripts/jquery-ui-1.13.2.min.js"></script>
    <script src="https://cdn.datatables.net/2.0.7/js/dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/2.0.7/js/dataTables.bootstrap5.min.js"></script>

    <script>
    //load the initail data
        $(document).ready(function () {
    // Call initializeDataTable function when the DOM is ready
            initializeDataTable();

        });



        //Load create page
      function LoadCreatePage() {
        //* /Hide student list and load create new form*/
          $("#studentlist").hide();
          $("#button").hide();
          $('.panel-body').hide();

          $("#back-to-list").show();
          $(".filter").hide();
          $("createoredit").show();
        $.ajax({
            type: "GET",
           url: "@Url.Action("AddOrEditStudent", "Allocation")",

            data: {},
            cache: false,
            async: false,

            success: function (data) {
                $("createoredit").show();
                $("#createoredit").html(data)
            },
            error: function (xhr, ajaxOptions, thrownError) {
                aler('');
            }
        })
        }
        function addAllocationSuccess(response) {
            if (response.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: response.message,
                    showCancelButton: false,
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $("#createoredit").empty();

                        // Show the student list, button, panel body, and filter
                        $("#studentlist").show();
                        $("#button").show();
                        $('.panel-body').show();
                        $(".filter").show();

                        // Hide the "Back to List" button
                        $("#back-to-list").hide();

                        // Reload the data table
                        datatable.ajax.reload();



                    }
                });
            } else {
                Swal.fire({ icon: 'error', title: 'Error', text: response.message });
            }
        }

        function addSubjectFailure(error) {
            console.error(error);
            Swal.fire('Error!', 'An error occurred while adding the allocation', 'error');
        }

        //load edit page
        function LoadEditPage(Id) {
            // Hide student list, button, and panel body
            $("#studentlist").hide();
            $("#button").hide();
            $('.panel-body').hide();
            $("#back-to-list").show(); // Show the "Back to List" button
            $(".filter").hide();
            datatable.ajax.reload();

            // Make an AJAX call to retrieve the edit form for the specified student ID
            $.ajax({
                type: "GET",
                url: "@Url.Action("AddOrEditStudent", "Allocation")/" + Id,
                cache: false,
                success: function (data) {
                    $("#createoredit").html(data); // Populate the create/edit form
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Error loading edit form');
                }
            });
        }





        //back button actions

        function LoadList() {
            $("#studentlist").show();
            $('#button').show();
            $('#back-to-list').hide(); // Hide the "Back to List" button
            $("#createoredit").empty();
            $('.panel-body').show();
            $('.filter').show();

        }

        //load table data
        function initializeDataTable() {
            datatable= $("#studentlist").DataTable({
             "ajax": {
                    "url": "/Allocation/GetAllStudentAllocation",
                 "type": "GET",
                 "datatype":"json"
             },
                "columns": [
                 { "data": "StudentRegNo" },
                 { "data": "StudentName" },
                 { "data": "SubjectCode" },
                 { "data": "SubjectName" },
                 { "data": "TeacherRegNo" },
                 { "data": "TeacherName" },



                 {
                     "data": "StudentAllocationID",
                     "render": function (data) {
                         return "<a class='btn' style='background-color: #cbf5ee ;' onclick= LoadEditPage(" + data + ")><i class='bi bi-pencil-square'></i></a>  <a class='btn' style='background-color: #cbf5ee ;' onclick=Delete(" + data + ")><i class='bi bi-trash' style='color:red;'></i></a>"
                     },
                     "orderable": false,
                     "searchable": false
                 }
                ],
                "pageLength": 5,
                "lengthMenu":[5,10,15,20,25]
            });
        }






        function Delete(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("DeleteStudentAllocation", "Allocation")/' + id,
                        success: function (data) {
                            if (data.success) {
                                datatable.ajax.reload();

                                Swal.fire({
                                    title: 'Deleted!',
                                    text: data.message,
                                    icon: 'success'
                                });
                            } else {
                                Swal.fire({
                                    title: 'Warning!',
                                    text: data.message,
                                    icon: 'warning'
                                });
                            }
                        }
                    });
                }
            });
        }




    //enable button


    </script>

}



