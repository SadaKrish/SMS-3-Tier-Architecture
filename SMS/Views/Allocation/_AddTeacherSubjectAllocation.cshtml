@model SMS.Models.Teacher_Subject_Allocation.Teacher_Subject_AllocationBO

@{
    ViewBag.Title = "AddOrEdit";
}

<style>
    .card {
        margin-bottom: 10px;
    }

    .control-label, .form-control, .form-select {
        font-size: 14px;
    }
</style>

<div class="container d-flex justify-content-center align-items-center w-100 " style="min-height: calc(80vh - 80px); margin-bottom: 50px;">
    <div class="card p-4" style="max-width: 500px; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1); border-radius: 10px;">
        @using (Ajax.BeginForm("AddOrEdit", "Allocation", new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "addAllocationSuccess",
            OnFailure = "addAllocationFailure"
        }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.SubjectAllocationID)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.Label("Teacher", htmlAttributes: new { @class = "control-label required" })
                </div>
                <div class="col-md p-2">
                    @Html.DropDownListFor(model => model.TeacherID, ViewBag.TeacherList as SelectList, "Select Teacher", new { @class = "form-select", id = "teacherDropdown" })

                    @Html.ValidationMessageFor(model => model.TeacherID, "", new { @class = "text-danger" })
                    <span id="teacherDropdownError" class="text-danger"></span>
                </div>
            </div>

            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.Label("Subject", htmlAttributes: new { @class = "control-label required" })
                </div>
                <div class="col-md p-2">
                    @Html.DropDownListFor(model => model.SubjectID, ViewBag.SubjectList as SelectList, "Select Subject", new { @class = "form-select", id = "subjectDropdown" })
                    @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group align-content-center">
                <input type="submit" value="@(Model.SubjectAllocationID== 0 ? "Add" : "Update")" class="btn btn-primary" style="font-size:14px;" />
                <button id="back-to-list" class="btn btn btn-secondary m-4" onclick="LoadList()">Back</button>
            </div>
        }
    </div>
</div>

<script>
    $(document).ready(function () {
        $('.required').append('<span style="color: red">*</span>');
    });

    $(document).ready(function () {
        // Handle form submission
        $("form").submit(function (event) {
            // Check if the Teacher dropdown has a selected value
            var teacherId = $("#TeacherID").val();
            if (teacherId == "" || teacherId == null) {
                // Prevent form submission
                event.preventDefault();
                // Display an error message
                $("#teacherDropdownError").text("Please select a teacher.");
            }
        });
    });
</script>
