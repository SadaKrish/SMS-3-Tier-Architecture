﻿<!--Author Details-->
@model  SMS.ViewModel.Subject.SubjectViewModel
@{
    ViewBag.Title = "Index";
}
<link href="https://cdn.datatables.net/2.0.7/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
<link href="~/Content/ModuleStyleSheet.css" rel="stylesheet" />

<div class="card panel-default">
    <div class="panel-heading">
        <h2 class="card-header">Subject</h2>
    </div>


    <div class="panel-body card-body">
        <div class="controls-container">
            <a class="btn btn-outline-primary" style="margin: 10px; background-color: #cbf5ee;" onclick="LoadCreatePage()" id="button"> <i class="bi bi-plus"></i>  Add New Subject</a>
            <div class="form-group filter">
                <label for="statusFilter">Status:</label>
                <select id="filterStatus">
                    <option value="all">All</option>
                    <option value="active">Active</option>
                    <option value="inactive">InActive</option>
                </select>
            </div>
            <div class="search-container">
                <select id="searchCategory">
                    <option value="SubjectCode">Subject Code</option>
                    <option value="Name">Name</option>
                  
                </select>
                <input type="text" id="customSearchBox" placeholder="Search...">
            </div>

        </div>
        <div class="table-responsive">
            <table id="studentlist" class="table table-bordered table-striped" style="text-align:center; width: 100%;">
                <thead style="text-align:center;">
                    <tr>

                        <th style="background-color: #cbf5ee; text-align: center;">@Html.DisplayNameFor(model => model.SubjectList.First().SubjectCode)</th>
                        <th style="background-color: #cbf5ee; text-align: center;">@Html.DisplayNameFor(model => model.SubjectList.First().Name)</th>
                        <th style="background-color: #cbf5ee; text-align: center;">@Html.DisplayNameFor(model => model.SubjectList.First().IsEnable)</th>
                        <th style="background-color: #cbf5ee;"></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>
@*<button id="back-to-list" class="btn m-4" onclick="LoadList()" style="display: none;">Back</button>*@
<div class="col-md-4" id="createoredit">
    <!--Partial view-->


</div>



@section scripts{
    <script src="~/Scripts/jquery-ui-1.13.2.min.js"></script>
    <script src="https://cdn.datatables.net/2.0.7/js/dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/2.0.7/js/dataTables.bootstrap5.min.js"></script>

    <script>
     $(document).ready(function () {
    function initializeDataTable(data = []) {
        // Check if the DataTable instance already exists
        if ($.fn.DataTable.isDataTable("#studentlist")) {
            $("#studentlist").DataTable().destroy();
        }

        $("#studentlist").DataTable({
            "data": data,
            "columns": [
                { "data": "SubjectCode" },
                { "data": "Name" },
                {
                    "data": "IsEnable",
                    "render": function (data, type, row) {
                        // Render a checkbox based on the IsEnable value
                        var checkbox = '<input type="checkbox" id="subjectCheckbox_' + row.SubjectID + '" ';
                        if (data) {
                            checkbox += 'checked ';
                        }
                        checkbox += 'onclick="ToggleEnable(' + row.SubjectID + ', this.checked, \'' + row.Name.replace(/'/g, "\\'") + '\')" />';

                        return checkbox;
                    }
                },
                {
                    "data": "SubjectID",
                    "render": function (data, type, row) {
                        // Check if the subject is allocated
                        if (!row.IsAllocated) {

                            return "<a class='btn' style='background-color: #cbf5ee;' onclick=LoadEditPage(" + data + ")><i class='bi bi-pencil-square'></i></a>  <a class='btn' style='background-color: #cbf5ee;' onclick=Delete(" + data + ")><i class='bi bi-trash' style='color:red;'></i></a>";
                        } else {
                            return "<span class='badge bg-success'>Allocated</span>";
                        }
                    },
                    "orderable": false,
                    "searchable": false
                }
            ],
            "pageLength": 5,
            "lengthMenu": [5, 10, 15, 20, 25],
            "searching":false
        });
    }

    function searchAllocations() {
        var searchText = $('#customSearchBox').val().trim();
        var searchCategory = $('#searchCategory').val();

        $.ajax({
            url: '@Url.Action("SearchSubjects", "Subject")',
            type: 'POST',
            data: { searchText: searchText, searchCategory: searchCategory },
            success: function (response) {
                if (response.success) {
                    // Reinitialize the DataTable with the new data
                    initializeDataTable(response.data);
                } else {
                    console.error('Search failed:', response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error('Error:', error);
            }
        });
    }

    // Initial DataTable load
    initializeDataTable();

    // Event handlers for search input and button
    $('#customSearchBox').on('keyup', searchAllocations);
    $('#searchButton').on('click', searchAllocations);
});




        //Load create page
      function LoadCreatePage() {
        //* /Hide student list and load create new form*/
          $("#studentlist").hide();
          $("#button").hide();
          $('.panel-body').hide();

          $("#back-to-list").show();
          $(".filter").hide();
          $("createoredit").show();
        $.ajax({
            type: "GET",
           url: "@Url.Action("AddOrEdit", "Subject")",

            data: {},
            cache: false,
            async: false,

            success: function (data) {
                $("createoredit").show();
                $("#createoredit").html(data)
            },
            error: function (xhr, ajaxOptions, thrownError) {
                aler('');
            }
        })
        }
        function addSubjectSuccess(response) {
            if (response.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: response.message,
                    showCancelButton: false,
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $("#createoredit").empty();

                        // Show the student list, button, panel body, and filter
                        $("#studentlist").show();
                        $("#button").show();
                        $('.panel-body').show();
                        $(".filter").show();

                        // Hide the "Back to List" button
                        $("#back-to-list").hide();

                        // Reload the data table
                        //var datatable = initializeDataTable();
                        $("#studentlist").DataTable().ajax.reload();
                    }
                });
            } else {
                // Clear previous validation messages
                $('.text-danger').text('');

                // Show validation messages under each field
                $.each(response.errors, function (index, error) {
                    $.each(error.Errors, function (key, message) {
                        var errorMessage = $('<span>').text(message).addClass('text-danger');
                        $('[name="' + error.Key + '"]').after(errorMessage);
                    });
                });

                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: response.message
                });
            }
        }

        function addSubjectFailure(error) {
            console.error(error);
            Swal.fire('Error!', 'An error occurred while adding the subject', 'error');
        }

        //load edit page
        function LoadEditPage(subjectId) {
            // Hide student list, button, and panel body
            $("#studentlist").hide();
            $("#button").hide();
            $('.panel-body').hide();
            $("#back-to-list").show(); // Show the "Back to List" button

            // Make an AJAX call to retrieve the edit form for the specified student ID
            $.ajax({
                type: "GET",
                url: "@Url.Action("AddOrEdit", "Subject")/" + subjectId,
                cache: false,
                success: function (data) {
                    $("#createoredit").html(data); // Populate the create/edit form
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Error loading edit form');
                }
            });
        }





        //back button actions

        function LoadList() {
            $("#studentlist").show();
            $('#button').show();
            $('#back-to-list').hide(); // Hide the "Back to List" button
            $("#createoredit").empty();
            $('.panel-body').show();
            $('.filter').show();

        }


        function initializeDataTable(status = 'all') {
            // Check if the DataTable instance already exists
            if ($.fn.DataTable.isDataTable("#studentlist")) {
                $("#studentlist").DataTable().destroy();
            }
            var datatable = $("#studentlist").DataTable({
                "ajax": {
                    "url": "/Subject/GetSubjects",
                    "type": "GET",
                    "datatype": "json",
                    "data": {
                        status: status
                    },
                    "dataSrc": function (json) {
                        if (json.success) {
                            return json.data;
                        } else {
                            return [];
                        }
                    }
                },
                "columns": [
                    { "data": "SubjectCode" },
                    { "data": "Name" },


                    {
                        "data": "IsEnable",
                        "render": function (data, type, row) {
                            // Render a checkbox based on the IsEnable value
                            var checkbox = '<input type="checkbox" id="subjectCheckbox_' + row.SubjectID + '" ';
                            if (data) {
                                checkbox += 'checked ';
                            }
                            checkbox += 'onclick="ToggleEnable(' + row.SubjectID + ', this.checked, \'' + row.Name.replace(/'/g, "\\'") + '\')" />';

                            return checkbox;
                        }
                    },
                    {
                        "data": "SubjectID",
                        "render": function (data, type, row) {
                            // Check if the subject is allocated
                            if (!row.IsAllocated) {

                                return "<a class='btn' style='background-color: #cbf5ee;' onclick=LoadEditPage(" + data + ")><i class='bi bi-pencil-square'></i></a>  <a class='btn' style='background-color: #cbf5ee;' onclick=Delete(" + data + ")><i class='bi bi-trash' style='color:red;'></i></a>";
                            } else {
                                return "<span class='badge bg-success'>Allocated</span>";
                            }
                        },
                        "orderable": false,
                        "searchable": false
                    }
                ],
                "pageLength": 5,
                "lengthMenu": [5, 10, 15, 20, 25],
                "searching": false
            });

        }

        $(document).ready(function () {
            initializeDataTable();

            $('#filterStatus').on('change', function () {
                var status = $(this).val();
                initializeDataTable(status);
            });
        });


        function Delete(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Delete","Subject")/' + id,
                        success: function (data) {
                            if (data.success) {
                                $("#studentlist").DataTable().ajax.reload();

                                Swal.fire({
                                    title: 'Deleted!',
                                    text: data.message,
                                    icon: 'success'
                                });
                            } else {
                                Swal.fire({
                                    title: 'Warning!',
                                    text: data.message,
                                    icon: 'warning'
                                });
                            }
                        }
                    });
                }
            });
        }




    //enable button
  function ToggleEnable(id, isChecked,displayName) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to toggle the enable status of this teacher ' +displayName + '?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes',
        cancelButtonText: 'No'
    }).then((result) => {
        if (result.isConfirmed) {
            // Proceed with toggling the enable status of the teacher
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ToggleEnable", "Teacher")/' + id,
                success: function(response) {
                    if (response.success) {
                        $("#studentlist").DataTable().ajax.reload();// Reload the data table
                        Swal.fire({
                            title: 'Success!',
                            text: response.message,
                            icon: 'success'
                        });
                    } else {
                        $('#subjectCheckbox_' + id).prop('checked', !isChecked);
                        Swal.fire({
                            title: 'Warning!',
                            text: response.message,
                            icon: 'warning'
                        });
                    }
                },
                error: function(xhr, status, error) {
                    Swal.fire({
                        title: 'Error!',
                        text: 'An error occurred while processing your request.',
                        icon: 'error'
                    });
                }
            });
        } else {
            $('#subjectCheckbox_' + id).prop('checked', !isChecked);
        }
    });
}

    </script>

}
